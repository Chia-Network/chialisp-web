(self.webpackChunkchialisp_web=self.webpackChunkchialisp_web||[]).push([[30],{9090:function(e,n,t){"use strict";t.d(n,{Z:function(){return g}});var a=t(7462),r=t(2949),l=t(171),o=t(3746),i=t(7410),s=t(7294),u=t(5154),c=t(460),p=t.n(c),m=t(9042),d=t.n(m),f=t(23),h=t.n(f);function g(e){var n,t=e.children,c=e.flavor,m=e.input,f=(0,r.I)().colorMode,g=(0,s.useMemo)((function(){return b(t)}),[]),k=(0,s.useState)(null!=(n=null==m?void 0:m.trim())?n:""),y=k[0],v=k[1],x=(0,s.useState)(g.trim()),E=x[0],N=x[1],w=(0,s.useState)(null),Z=w[0],C=w[1];return s.createElement(o.ZP,{Prism:i.Z,theme:"dark"===f?d():h(),code:E,language:"chialisp"},(function(e){var n=e.className,t=e.style,r=e.tokens,m=e.getLineProps,g=e.getTokenProps;return s.createElement("pre",{className:n,style:Object.assign({},t,{position:"relative"})},y?s.createElement(s.Fragment,null,s.createElement(o.ZP,{Prism:i.Z,theme:"dark"===f?d():h(),code:y,language:"chialisp"},(function(e){var n=e.tokens,t=e.getLineProps,r=e.getTokenProps;return s.createElement(p(),{value:y,onValueChange:function(e){return v(e)},highlight:function(){return n.map((function(e,n){return s.createElement("div",(0,a.Z)({key:n},t({line:e})),e.map((function(e,n){return s.createElement("span",(0,a.Z)({key:n},r({token:e})))})))}))},padding:0})})),s.createElement("hr",{style:{marginTop:"14px",marginBottom:"14px"}})):"",s.createElement(p(),{value:E,onValueChange:function(e){return N(e)},highlight:function(){return r.map((function(e,n){return s.createElement("div",(0,a.Z)({key:n},m({line:e})),e.map((function(e,n){return s.createElement("span",(0,a.Z)({key:n},g({token:e})))})))}))},padding:0}),!y&&s.createElement(u.A0H,{size:24,className:"icon-button",style:{position:"absolute",top:"16px",right:"60px",cursor:"pointer"},onClick:function(){return v("()")}}),s.createElement(u.gmG,{size:24,className:"icon-button",style:{position:"absolute",top:"16px",right:"16px",cursor:"pointer"},onClick:function(){var e,n,t;try{e=l.Program.fromSource(E)}catch(a){return void C("Parsing error: "+(""+a).replace("Error: ",""))}if(c&&"chialisp"!==c)n=e;else{try{n=e.compile().value}catch(a){return void C("Compilation error: "+(""+a).replace("Error: ",""))}if(n.isAtom)return void C(n.toSource())}try{t=n.run(y?l.Program.fromSource(y):l.Program.nil).value}catch(a){return void C("Eval error: "+(""+a).replace("Error: ",""))}C(t.toSource())}}),null===Z?"":s.createElement(s.Fragment,null,s.createElement("hr",{style:{marginTop:"14px",marginBottom:"14px"}}),s.createElement(o.ZP,{Prism:i.Z,theme:"dark"===f?d():h(),code:Z,language:"chialisp"},(function(e){var n=e.tokens,t=e.getLineProps,r=e.getTokenProps;return n.map((function(e,n){return s.createElement("div",(0,a.Z)({key:n},t({line:e})),e.map((function(e,n){return s.createElement("span",(0,a.Z)({key:n},r({token:e})))})))}))}))))}))}var k=function(e){return null==e||"boolean"==typeof e||"{}"===JSON.stringify(e)?"":e.toString()},y=function(e){return(0,s.isValidElement)(e)&&Boolean(e.props.children)},b=function e(n){return n instanceof Array||(0,s.isValidElement)(n)?s.Children.toArray(n).reduce((function(n,t){var a="";return a=(0,s.isValidElement)(t)&&y(t)?e(t.props.children):(0,s.isValidElement)(t)&&!y(t)?"":k(t),n.concat(a)}),""):k(n)}},9042:function(e){e.exports={plain:{color:"#F8F8F2",backgroundColor:"#282A36",fontWeight:"bold"},styles:[{types:["keyword"],style:{color:"rgb(189, 147, 249)"}},{types:["listop","class-name","quotes"],style:{color:"rgb(80, 250, 123)"}},{types:["builtin"],style:{color:"rgb(5, 227, 223)"}},{types:["number","hexadecimal","string","boolean"],style:{color:"rgb(255, 184, 108)",fontWeight:"normal"}},{types:["punctuation","symbol"],style:{color:"rgb(248, 248, 242)"}},{types:["variable"],style:{fontStyle:"italic"}},{types:["comment"],style:{color:"rgb(98, 114, 164)",fontWeight:"normal"}},{types:["function","car"],style:{color:"rgb(241, 250, 140)"}}]}},23:function(e){e.exports={plain:{color:"#383a42",backgroundColor:"#fafafa",fontWeight:"bold"},styles:[{types:["keyword"],style:{color:"#990096"}},{types:["listop","class-name","quotes"],style:{color:"#006100"}},{types:["builtin"],style:{color:"#127EAF"}},{types:["number","hexadecimal","string","boolean"],style:{color:"#B35C00",fontWeight:"normal"}},{types:["punctuation","symbol"],style:{color:"#383a42"}},{types:["variable"],style:{fontStyle:"italic"}},{types:["comment"],style:{color:"#73737D",fontWeight:"normal"}},{types:["function","car"],style:{color:"#0045DB"}}]}},4381:function(e,n,t){"use strict";t.r(n),t.d(n,{assets:function(){return p},contentTitle:function(){return u},default:function(){return f},frontMatter:function(){return s},metadata:function(){return c},toc:function(){return m}});var a=t(7462),r=t(3366),l=(t(7294),t(3905)),o=t(9090),i=["components"],s={id:"examples",title:"Examples",slug:"/examples"},u=void 0,c={unversionedId:"examples",id:"examples",title:"Examples",description:"This is a set of examples for various operators. If you want to see their documentation, checkout the Operators page.",source:"@site/docs/examples.md",sourceDirName:".",slug:"/examples",permalink:"/examples",draft:!1,editUrl:"https://github.com/Chia-Network/{{ REPOSITORY_NAME }}/blob/main/docs/examples.md",tags:[],version:"current",frontMatter:{id:"examples",title:"Examples",slug:"/examples"},sidebar:"someSidebar",previous:{title:"Operators",permalink:"/operators"},next:{title:"Costs",permalink:"/costs"}},p={},m=[{value:"Modules",id:"modules",level:2},{value:"mod",id:"mod",level:3},{value:"include",id:"include",level:3},{value:"defun",id:"defun",level:3},{value:"defun-inline",id:"defun-inline",level:3},{value:"lambda",id:"lambda",level:3},{value:"defmacro, qq, unquote",id:"defmacro",level:3},{value:"defconstant",id:"defconstant",level:3}],d={toc:m};function f(e){var n=e.components,t=(0,r.Z)(e,i);return(0,l.kt)("wrapper",(0,a.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"This is a set of examples for various operators. If you want to see their documentation, checkout the ",(0,l.kt)("a",{parentName:"p",href:"/operators"},"Operators page"),"."),(0,l.kt)("h2",{id:"modules"},"Modules"),(0,l.kt)("h3",{id:"mod"},"mod"),(0,l.kt)("p",null,"Compiles an entire program into a single executable expression. You can define other constants within it."),(0,l.kt)(o.Z,{flavor:"chialisp",input:"(42)",mdxType:"Runnable"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-chialisp"},"(mod (value)\n\n    ;; Doubles the value as the output.\n    (* value 2)\n)\n"))),(0,l.kt)("h3",{id:"include"},"include"),(0,l.kt)("p",null,"Includes all of the constants defined in a library file in the module."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"cdv clsp retrieve sha256tree\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-chialisp"},"(mod (thing-to-hash)\n\n    ;; Includes the constants defined in the file.\n    (include sha256tree.clib)\n\n    ;; Calls the utility function as the output.\n    (sha256tree thing-to-hash)\n)\n")),(0,l.kt)("h3",{id:"defun"},"defun"),(0,l.kt)("p",null,"Defines a function that can be called from anywhere within the module."),(0,l.kt)(o.Z,{flavor:"chialisp",mdxType:"Runnable"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-chialisp"},"(mod ()\n    (defun square (number)\n        ;; Returns the number squared.\n        (* number number)\n    )\n\n    (square 16)\n)\n"))),(0,l.kt)("h3",{id:"defun-inline"},"defun-inline"),(0,l.kt)("p",null,"Defines an inline function that can be called from anywhere within the module. It simply replaces the call with the code within (like an easier to write but limited macro)."),(0,l.kt)(o.Z,{flavor:"chialisp",mdxType:"Runnable"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-chialisp"},"(mod ()\n    (defun-inline double (number)\n        ;; Returns twice the number.\n        (* number 2)\n    )\n\n    (double 9)\n)\n"))),(0,l.kt)("h3",{id:"lambda"},"lambda"),(0,l.kt)("p",null,"Compiles a block of code into a single executable expression. Useful for writing functions as arguments to other functions."),(0,l.kt)(o.Z,{flavor:"chialisp",input:"(3 2)",mdxType:"Runnable"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-chialisp"},"(lambda (n1 n2)\n    ;; Returns the two added together.\n    (+ n1 n2)\n)\n"))),(0,l.kt)("h3",{id:"defmacro"},"defmacro, qq, unquote"),(0,l.kt)("p",null,"Defines a macro that can manually structure the source code it is replaced with. Allows for advanced compile time behavior."),(0,l.kt)(o.Z,{flavor:"chialisp",mdxType:"Runnable"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-chialisp"},"(mod ()\n    (defmacro or ARGS\n        (if ARGS\n            (qq (if (unquote (f ARGS))\n                1\n                (unquote (c or (r ARGS)))\n            ))\n        0)\n    )\n\n    (or () () 1)\n)\n"))),(0,l.kt)("h3",{id:"defconstant"},"defconstant"),(0,l.kt)("p",null,"Defines a constant value that can be referenced by name."),(0,l.kt)(o.Z,{flavor:"chialisp",mdxType:"Runnable"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-chialisp"},"(mod ()\n    (defconstant MAGIC_NUMBER 314159) ; (0x04cb2f in hex)\n\n    MAGIC_NUMBER ; Replaced with the actual value.\n)\n"))))}f.isMDXComponent=!0}}]);